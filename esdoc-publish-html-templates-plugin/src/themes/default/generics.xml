<template id="page.head" args-as="doc">
    <base href="${baseUrlOf(doc)}">
    <title>${titleOf(doc)}</title>
</template>


<template id="attribute2" args-as="klass,relations,caption,separator">
    ${relations.length ? `<div class="attribute"><span class="attribute-label">${caption} </span><span class="attribute-value">${relations.map(doc => linkFor(doc)).join(separator || ", ")}</span></div>` : ""}
</template>


<template id="properties" args-as="item">
    <section class="properties">
        <h2>Properties</h2>
        ${propertiesOf(item).map(property => render("property", property.item, property.overrides, property.inherited)).join("")}
    </section>
</template>


<template id="property" args-as="item,overrides,inherited">
    <article class="item property">
        <h3 class="signature">
            <a class="anchor" id="${item.name}" href="#${item.name}"></a>
            ${render("inline-options", [render("debug-toggle", { kind: "item", __docId__: item.__docId__ }), sourceLink(item, "source")])}
            <code class="access">${item.static ? "static" : ""}</code>
            <code class="access">${item.access}</code>
            <span class="name">${render("doc.title", item)}</span><code class="return">${signature(item.type)}</code>
        </h3>
        <div class="attributes">
            ${inherited ? render("attribute", parentOf(inherited).interface ? 'Implemented in' : 'Inherited from', `${linkFor(parentOf(inherited))}.${linkFor(inherited)}`, "inherited")
                : overrides.length ? render("attribute", "Overrides", overrides.map(item => `${linkFor(parentOf(item))}.${linkFor(item)}`).join(", "), "overrides")
                    : ""
            }
        </div>
        ${render("deprecation", item, "this property was deprecated")}
        ${render("debug-info", { kind: "item", __docId__: item.__docId__, item:item, overrides:overrides, inherited: inherited})}
        ${render("description", item)}
    </article>
</template>


<template id="methods" args-as="item">
    <section class="methods">
        <h2>Methods</h2>
        ${methodsOf(item).map(method => render("method", method.item, method.overrides, method.inherited)).join("")}
    </section>
</template>


<template id="method" args-as="item,overrides,inherited">
    <article class="item method">
        <h3 class="signature">
            <a class="anchor" id="${item.name}" href="#${item.name}"></a>
            ${render("inline-options", [render("debug-toggle", { kind: "item", __docId__: item.__docId__ }), sourceLink(item, "source")])}
            <code class="access">${item.static ? "static" : ""}</code>
            <code class="access">${item.access}</code>
            <span class="name">${render("doc.title", item)}</span><code class="return">${self.buildFunctionSignature(item)}</code>
        </h3>
        <div class="attributes">
            ${inherited ? render("attribute", parentOf(inherited).interface ? 'Implemented in' : 'Inherited from', `${linkFor(parentOf(inherited))}.${linkFor(inherited)}`, "inherited")
                : overrides.length ? render("attribute", "Overrides", overrides.map(item => `${linkFor(parentOf(item))}.${linkFor(item)}`). join(", "), "overrides")
                    : ""
            }
        </div>
        ${render("deprecation", item, "this method was deprecated")}
        ${render("debug-info", { kind: "item", __docId__: item.__docId__, item:item, overrides:overrides, inherited: inherited})}
        ${render("description", item)}
        ${render("params", item)}
    </article>
</template>


<template id="params" args-as="item">
    ${(item.params || []).length ? `<div class="parameters"><ul>${item.params.filter(param => param.description).map(param => render("param", param)).join("")}</ul></div>` : ""}
</template>


<template id="param" args-as="param">
    <li class="param"><code type="return">${param.name}</code> &ndash; ${param.description || ""}</li>
</template>


<template id="events" args-as="item">
    ${render("events-impl", eventsOf(item), item)}
</template>


<template id="events-impl" args-as="events,item">
    ${events.length ? `
    <section class="events">
        <h2>Events</h2>
        ${events.map(item => render("event", item)).join("")}
    </section>
    ` : ""}
</template>


<template id="event" args-as="item">
    <article class="item event">
        <h3 class="signature">
            <a class="anchor" id="${item.name}" href="#${item.name}"></a>
            <span class="options">${render("debug-toggle", item)}</span>
            <a id="${item.name}" class="name" title="${item}">${item.name}</a>
        </h3>
        ${render("debug-info", item)}
        ${render("description", item)}
    </article>
</template>


<template id="attribute" args-as="title,value,type">
    <div class="attribute ${type}"><span class="attribute-label">${title}</span><span class="attribute-value">${value}</span></div>
</template>


<template id="inline-options" args-as="options">
    <span class="options">${options.join(" | ")}</span>
</template>

<template id="item" args-as="item">
    <article class="item">
        <h3 class="signature">
            <a class="anchor" id="${item.name}" href="#${item.name}"></a>
            ${render("inline-options", [render("debug-toggle", item), sourceLink(item, "source")])}
            <code class="access">${item.static ? "static" : ""}</code>
            <code class="access">${item.access}</code>
            <code class="access">${item.kind}</code>
            <a class="name" href="${urlFor(item)}">${render("doc.title", item)}</span></a><code class="return">${signature(item)}</code>
        </h3>
        <div class="attributes">
            ${render("attribute", "Defined in:", sourceLink(item, sourceOf(item).name), "defined")}
        </div>
        ${render("deprecation", item, "this item was deprecated")}
        ${render("experimental", item)}
        ${render("debug-info", item)}
        ${render("description", item)}
        ${render("todo", item)}
    </article>
</template>


<template id="description" args-as="item">
    ${item.description ? `<div class="description">${resolveLink(markdown(item.description))}</div>` : ""}
    ${item.see ? render("sees", item.see) : ""}
    ${item.examples ? render("examples", item.examples) : ""}
</template>

<template id="examples" args-as="examples">
    ${examples.map(example => parseExample(example)).map(({body, caption}) => `
        <div class="example">
            <h4>Example:${caption ? ` <code>${caption}</code>` : ""}</h4>
            <pre class="prettyprint source-code"><code>${escape(body)}</code></pre>
        </div>
    `)}
</template>

<template id="sees" args-as="sees">
    <h4>See:</h4>
    <ul>
    ${sees.map(see => `<li><a href="${see}">${see}</a></li>`).join("")}
    </ul>
</template>

<template id="deprecation" args-as="item,text">
    ${item.deprecated ? `<div class="deprecated">${text}${item.deprecated !== true ? ": " + resolveLink(item.deprecated) : ""}.</div>` : ""}
</template>


<template id="todo" args-as="item">
    ${item.todo ? `
        <div class="todo">
            <h4>Todo:</h4>
            <ul>${item.todo.map(todo => `<li>${resolveLink(todo)}</li>`).join("")}</ul>
        </div>
    ` : ""}
</template>


<template id="experimental" args-as="item">
    ${item.experimental ? `<div class="experimental">this ${item.kind} is experimental.</div>` : ""}
</template>


<template id="debug-toggle" args-as="item">
    <span class="debug-toggle" toggle="#debug-${item.kind}-${item.__docId__}"><a>debug</a></span>
</template>


<template id="debug-info" args-as="item">
    <div class="debug-info object hidden" id="debug-${item.kind}-${item.__docId__}"><pre>${escape(JSON.stringify(item, null, 2))}</pre></div>
</template>
